{"ast":null,"code":"import _toConsumableArray from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/Email.jsx\";\nimport React from \"react\";\nimport SockJsClient from \"react-stomp\";\nimport { TalkBox } from \"react-talk\";\nimport MailList from \"./MailList\";\nimport axios from 'axios';\nvar DEVELOPMENT_URL = \"http://localhost:8080\";\n\nvar Email =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Email, _React$Component);\n\n  function Email(props) {\n    var _this;\n\n    _classCallCheck(this, Email);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Email).call(this, props));\n\n    _this.onMessageReceive = function (msg, topic) {\n      console.log(\"Message from Service\");\n      var message = msg['content'];\n\n      _this.setState(function (prevState) {\n        return {\n          messages: [].concat(_toConsumableArray(prevState.messages), [message])\n        };\n      });\n    };\n\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeMessage = _this.onChangeMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      clientConnected: false,\n      messages: [],\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(Email, [{\n    key: \"onChangeMessage\",\n    value: function onChangeMessage(e) {\n      this.setState({\n        text: e.target.value\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function submit(e) {\n      e.preventDefault();\n\n      try {\n        this.clientRef.sendMessage(\"/app/all\", JSON.stringify({\n          \"content\": this.state.text,\n          \"fromUser\": \"thongtran715\",\n          \"toUser\": \"tienle123\"\n        }));\n        console.log(\"Sent message\");\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var url = DEVELOPMENT_URL + \"/mail/thongtran715\";\n      axios.get(url).then(function (response) {\n        // for (var i = 0 ; i < response.length; ++i) {\n        //     this.setState({messages: [...this.state.messages, response[i]]});\n        // }\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      return;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.onChangeMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(MailList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(SockJsClient, {\n        url: DEVELOPMENT_URL + \"/ws\",\n        topics: [\"/topic/all\"],\n        onMessage: this.onMessageReceive,\n        ref: function ref(client) {\n          _this2.clientRef = client;\n        },\n        debug: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Email;\n}(React.Component);\n\nexport { Email as default };","map":{"version":3,"sources":["/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/Email.jsx"],"names":["React","SockJsClient","TalkBox","MailList","axios","DEVELOPMENT_URL","Email","props","onMessageReceive","msg","topic","console","log","message","setState","prevState","messages","submit","bind","onChangeMessage","state","clientConnected","text","e","target","value","preventDefault","clientRef","sendMessage","JSON","stringify","url","get","then","response","catch","error","client","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SockJsClient from \"react-stomp\";\nimport { TalkBox } from \"react-talk\";\nimport MailList from \"./MailList\";\nimport axios from 'axios';\nconst DEVELOPMENT_URL = \"http://localhost:8080\";\n\nexport default class Email extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submit = this.submit.bind(this);\n        this.onChangeMessage = this.onChangeMessage.bind(this);\n        this.state = {\n            clientConnected: false,\n            messages: [],\n            text: ''\n        };\n    }\n    onChangeMessage(e){\n        this.setState({text:e.target.value});\n    }\n    submit(e){\n        e.preventDefault();\n        try {\n            this.clientRef.sendMessage(\"/app/all\", JSON.stringify({\"content\": this.state.text, \"fromUser\": \"thongtran715\", \"toUser\": \"tienle123\"}));\n            console.log(\"Sent message\");\n            return true;\n        } catch(e) {\n            return false;\n        }\n    }\n    onMessageReceive = (msg, topic) => {\n        console.log(\"Message from Service\");\n        let message = msg['content'];\n        this.setState(prevState => ({\n            messages: [...prevState.messages, message]\n        }));\n    };\n     componentWillMount() {\n        const url = DEVELOPMENT_URL + \"/mail/thongtran715\";\n         axios.get(url)\n             .then(function (response) {\n                 // for (var i = 0 ; i < response.length; ++i) {\n                 //     this.setState({messages: [...this.state.messages, response[i]]});\n                 // }\n                 console.log(response);\n             })\n             .catch(function (error) {\n                 console.log(error);\n             });\n\n        return;\n    };\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.submit}>\n                    <input type=\"text\" onChange={this.onChangeMessage}/>\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <MailList messages={this.state.messages}/>\n                <SockJsClient url= {DEVELOPMENT_URL + \"/ws\"}   topics={[\"/topic/all\"]}\n                              onMessage={ this.onMessageReceive } ref={ (client) => { this.clientRef = client }}\n                              debug={ false }/>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}