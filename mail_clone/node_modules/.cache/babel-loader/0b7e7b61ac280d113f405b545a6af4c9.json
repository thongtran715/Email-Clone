{"ast":null,"code":"import _classCallCheck from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/MailListReceive.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Slide from '@material-ui/core/Slide';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      maxWidth: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: 'inline'\n    },\n    fab: {\n      position: 'absolute',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2\n    },\n    appBar: {\n      position: 'relative'\n    },\n    flex: {\n      flex: 1\n    },\n    search: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: '100%'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }),\n    searchIcon: {\n      width: theme.spacing.unit * 9,\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  };\n};\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n}\n\nvar MailListReceive =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MailListReceive, _React$Component);\n\n  function MailListReceive(props) {\n    var _this;\n\n    _classCallCheck(this, MailListReceive);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MailListReceive).call(this, props));\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(MailListReceive, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var messages = this.props.messages;\n      var GroupsOfMessages = messages.map(function (message) {\n        if (message['toUser'] === \"tienle123\") {\n          return React.createElement(ListItem, {\n            alignItems: \"flex-start\",\n            key: message[\"mailId\"],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(ListItemAvatar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(Avatar, {\n            alt: \"Remy Sharp\",\n            src: \"/static/images/avatar/1.jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          })), React.createElement(ListItemText, {\n            primary: \"Brunch this weekend?\",\n            secondary: React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              component: \"span\",\n              className: classes.inline,\n              color: \"textPrimary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }, message[\"fromUser\"]), \" â€” \" + message[\"content\"]),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        }\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, GroupsOfMessages), React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.fab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        fullScreen: true,\n        open: this.state.open,\n        onClose: this.handleClose,\n        TransitionComponent: Transition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        onClick: this.handleClose,\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        className: classes.flex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Compose Email\"), React.createElement(Button, {\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Send\"))), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.menuButton,\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        className: classes.title,\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Material-UI\"), React.createElement(\"div\", {\n        className: classes.grow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.searchIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(InputBase, {\n        placeholder: \"Search\\u2026\",\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })))), React.createElement(ListItem, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-full-width\",\n        label: \"Title\",\n        style: {\n          margin: 8\n        },\n        placeholder: \"Title of the email\",\n        required: true,\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(ListItem, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-textarea\",\n        label: \"Content\",\n        placeholder: \"Type your content\",\n        autoFocus: true,\n        multiline: true,\n        rows: 10,\n        required: true,\n        fullWidth: true,\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MailListReceive;\n}(React.Component);\n\nMailListReceive.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MailListReceive);","map":{"version":3,"sources":["/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/MailListReceive.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","AddIcon","Fab","Slide","Dialog","AppBar","IconButton","Toolbar","CloseIcon","Button","Divider","TextField","fade","InputBase","SearchIcon","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","fab","position","bottom","spacing","unit","right","appBar","flex","search","borderRadius","shape","common","white","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","alignItems","justifyContent","Transition","props","MailListReceive","handleClickOpen","setState","open","handleClose","state","classes","messages","GroupsOfMessages","map","message","menuButton","title","grow","inputRoot","input","inputInput","margin","shrink","textField","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Slide from '@material-ui/core/Slide';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing.unit * 2,\n        right: theme.spacing.unit * 2,\n    },\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing.unit,\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 9,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n});\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n\nclass MailListReceive extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            open: false\n        }\n    }\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n        var messages = this.props.messages;\n        const GroupsOfMessages = messages.map(message => {\n            if (message['toUser'] === \"tienle123\") {\n                   return <ListItem alignItems=\"flex-start\" key={message[\"mailId\"]}>\n                        <ListItemAvatar>\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary=\"Brunch this weekend?\"\n                            secondary={\n                                <React.Fragment>\n                                    <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                        {message[\"fromUser\"]}\n                                    </Typography>\n                                    {\" â€” \" + message[\"content\"]}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n            }\n        });\n\n        return (\n            <div>\n                <List className={classes.root}>\n            {GroupsOfMessages}\n                </List>\n                <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} >\n                    <AddIcon onClick={this.handleClickOpen} />\n                </Fab>\n                <Dialog\n                    fullScreen\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    TransitionComponent={Transition}\n                >\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                            Compose Email\n                        </Typography>\n                        <Button color=\"inherit\" onClick={this.handleClose}>\n                            Send\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <List>\n                    <ListItem button>\n                        <Toolbar>\n                            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n                            </IconButton>\n                            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                                Material-UI\n                            </Typography>\n                            <div className={classes.grow} />\n                            <div className={classes.search}>\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon />\n                                </div>\n                                <InputBase\n                                    placeholder=\"Searchâ€¦\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                />\n                            </div>\n                        </Toolbar>\n                    </ListItem>\n                    <ListItem button>\n                        {/*<ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />*/}\n                        <TextField\n                            id=\"outlined-full-width\"\n                            label=\"Title\"\n                            style={{ margin: 8 }}\n                            placeholder=\"Title of the email\"\n                            required={true}\n                            fullWidth\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </ListItem>\n                    <Divider />\n                    <ListItem button>\n                        <TextField\n                            id=\"outlined-textarea\"\n                            label=\"Content\"\n                            placeholder=\"Type your content\"\n                            autoFocus={true}\n                            multiline={true}\n                            rows={10}\n                            required={true}\n                            fullWidth\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                    </ListItem>\n                </List>\n            </Dialog>\n            </div>\n        );\n    }\n}\nMailListReceive.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(MailListReceive);\n"]},"metadata":{},"sourceType":"module"}