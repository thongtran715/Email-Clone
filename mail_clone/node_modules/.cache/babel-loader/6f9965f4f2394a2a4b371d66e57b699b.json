{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/Email.jsx\";\nimport React from \"react\";\nimport SockJsClient from \"react-stomp\";\nimport MailList from \"./MailListReceive\";\nvar DEVELOPMENT_URL = \"http://localhost:8080\";\n\nvar Email =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Email, _React$Component);\n\n  function Email(props) {\n    var _this;\n\n    _classCallCheck(this, Email);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Email).call(this, props));\n\n    _this.onMessageReceive = function (msg, topic) {\n      var message = msg['content'];\n\n      _this.setState(function (prevState) {\n        return {\n          messages: [].concat(_toConsumableArray(prevState.messages), [message])\n        };\n      });\n\n      console.log(_this.state.messages);\n    };\n\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeMessage = _this.onChangeMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchMessages = _this.fetchMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      clientConnected: false,\n      messages: [],\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(Email, [{\n    key: \"onChangeMessage\",\n    value: function onChangeMessage(e) {\n      this.setState({\n        text: e.target.value\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function submit(e) {\n      e.preventDefault();\n\n      try {\n        this.clientRef.sendMessage(\"/app/all\", JSON.stringify({\n          \"content\": this.state.text,\n          \"fromUser\": \"thongtran715\",\n          \"toUser\": \"tienle123\"\n        }));\n        console.log(\"Sent message\");\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: \"fetchMessages\",\n    value: function () {\n      var _fetchMessages = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, response, body, meggs, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = DEVELOPMENT_URL + \"/mail/receive/tienle123\";\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                body = _context.sent;\n                meggs = [];\n\n                for (i = 0; i < body.length; ++i) {\n                  meggs.push(body[i]);\n                }\n\n                this.setState({\n                  messages: [].concat(_toConsumableArray(this.state.messages), meggs)\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchMessages() {\n        return _fetchMessages.apply(this, arguments);\n      }\n\n      return fetchMessages;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.fetchMessages();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.onChangeMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(MailList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(SockJsClient, {\n        url: DEVELOPMENT_URL + \"/ws\",\n        topics: [\"/topic/all\"],\n        onMessage: this.onMessageReceive,\n        ref: function ref(client) {\n          _this2.clientRef = client;\n        },\n        debug: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Email;\n}(React.Component);\n\nexport { Email as default };","map":{"version":3,"sources":["/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/Email.jsx"],"names":["React","SockJsClient","MailList","DEVELOPMENT_URL","Email","props","onMessageReceive","msg","topic","message","setState","prevState","messages","console","log","state","submit","bind","onChangeMessage","fetchMessages","clientConnected","text","e","target","value","preventDefault","clientRef","sendMessage","JSON","stringify","url","fetch","response","json","body","meggs","i","length","push","client","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SockJsClient from \"react-stomp\";\nimport MailList from \"./MailListReceive\";\nconst DEVELOPMENT_URL = \"http://localhost:8080\";\n\nexport default class Email extends React.Component {\n    constructor(props) {\n        super(props);\n        this.submit = this.submit.bind(this);\n        this.onChangeMessage = this.onChangeMessage.bind(this);\n        this.fetchMessages = this.fetchMessages.bind(this);\n        this.state = {\n            clientConnected: false,\n            messages: [],\n            text: ''\n        };\n    }\n    onChangeMessage(e){\n        this.setState({text:e.target.value});\n    }\n    submit(e){\n        e.preventDefault();\n        try {\n            this.clientRef.sendMessage(\"/app/all\", JSON.stringify({\"content\": this.state.text, \"fromUser\": \"thongtran715\", \"toUser\": \"tienle123\"}));\n            console.log(\"Sent message\");\n            return true;\n        } catch(e) {\n            return false;\n        }\n    }\n    onMessageReceive = (msg, topic) => {\n        let message = msg['content'];\n        this.setState(prevState => ({\n            messages: [...prevState.messages, message]\n        }));\n        console.log(this.state.messages);\n    };\n    async fetchMessages(){\n        const url = DEVELOPMENT_URL + \"/mail/receive/tienle123\";\n        const response = await fetch(url);\n        const body = await response.json();\n        var meggs = [];\n        for (let i = 0 ; i < body.length; ++i) {\n            meggs.push(body[i]);\n        }\n        this.setState({\n            messages: [...this.state.messages, ...meggs]\n        });\n    };\n    async componentDidMount() {\n        this.fetchMessages();\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.submit}>\n                    <input type=\"text\" onChange={this.onChangeMessage}/>\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <MailList messages={this.state.messages}/>\n\n                <SockJsClient url= {DEVELOPMENT_URL + \"/ws\"}   topics={[\"/topic/all\"]}\n                              onMessage={ this.onMessageReceive } ref={ (client) => { this.clientRef = client }}\n                              debug={ false }/>\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}