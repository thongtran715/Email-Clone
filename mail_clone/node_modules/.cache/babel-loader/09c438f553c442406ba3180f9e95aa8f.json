{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _AutoComplete = require('material-ui/AutoComplete');\n\nvar _AutoComplete2 = _interopRequireDefault(_AutoComplete);\n\nvar _IconButton = require('material-ui/IconButton');\n\nvar _IconButton2 = _interopRequireDefault(_IconButton);\n\nvar _Paper = require('material-ui/Paper');\n\nvar _Paper2 = _interopRequireDefault(_Paper);\n\nvar _search = require('material-ui/svg-icons/action/search');\n\nvar _search2 = _interopRequireDefault(_search);\n\nvar _close = require('material-ui/svg-icons/navigation/close');\n\nvar _close2 = _interopRequireDefault(_close);\n\nvar _colors = require('material-ui/styles/colors');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar getStyles = function getStyles(props, state) {\n  var disabled = props.disabled,\n      iconButtonStyle = props.iconButtonStyle;\n  var value = state.value;\n  var nonEmpty = value.length > 0;\n  return {\n    root: {\n      height: 48,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    iconButtonClose: {\n      style: _extends({\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(1, 1)' : 'scale(0, 0)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n      }, iconButtonStyle),\n      iconStyle: {\n        opacity: nonEmpty ? 1 : 0,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n      }\n    },\n    iconButtonSearch: {\n      style: _extends({\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(0, 0)' : 'scale(1, 1)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n        marginRight: -48\n      }, iconButtonStyle),\n      iconStyle: {\n        opacity: nonEmpty ? 0 : 1,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n      }\n    },\n    input: {\n      width: '100%'\n    },\n    searchContainer: {\n      margin: 'auto 16px',\n      width: '100%'\n    }\n  };\n};\n/**\n * Material design search bar\n * @see [Search patterns](https://material.io/guidelines/patterns/search.html)\n */\n\n\nvar SearchBar = function (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar(props) {\n    _classCallCheck(this, SearchBar);\n\n    var _this = _possibleConstructorReturn(this, (SearchBar.__proto__ || Object.getPrototypeOf(SearchBar)).call(this, props));\n\n    _this.handleFocus = function (e) {\n      _this.setState({\n        focus: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(e);\n      }\n    };\n\n    _this.handleBlur = function (e) {\n      _this.setState({\n        focus: false\n      });\n\n      if (_this.state.value.trim().length === 0) {\n        _this.setState({\n          value: ''\n        });\n      }\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(e);\n      }\n    };\n\n    _this.handleInput = function (e) {\n      _this.setState({\n        value: e\n      });\n\n      _this.props.onChange(e);\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        active: false,\n        value: ''\n      });\n\n      _this.props.onChange('');\n    };\n\n    _this.handleKeyPressed = function (e) {\n      if (e.charCode === 13) {\n        _this.props.onRequestSearch();\n      }\n\n      if (_this.props.onKeyPress) {\n        _this.props.onKeyPress(e);\n      }\n    };\n\n    _this.state = {\n      focus: false,\n      value: _this.props.value,\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        this.setState(_extends({}, this.state, {\n          value: nextProps.value\n        }));\n      }\n    }\n    /**\n     * Focus the search field.\n     * @public\n     */\n\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.autoComplete.focus();\n    }\n    /**\n     * Blurs the search field.\n     * @public\n     */\n\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this.autoComplete.blur();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var styles = getStyles(this.props, this.state);\n      var value = this.state.value;\n\n      var _props = this.props,\n          closeIcon = _props.closeIcon,\n          disabled = _props.disabled,\n          onRequestSearch = _props.onRequestSearch,\n          searchIcon = _props.searchIcon,\n          spellCheck = _props.spellCheck,\n          style = _props.style,\n          inputProps = _objectWithoutProperties(_props, ['closeIcon', 'disabled', 'onRequestSearch', 'searchIcon', 'spellCheck', 'style']);\n\n      return _react2.default.createElement(_Paper2.default, {\n        style: _extends({}, styles.root, style)\n      }, _react2.default.createElement('div', {\n        style: styles.searchContainer\n      }, _react2.default.createElement(_AutoComplete2.default, _extends({\n        ref: function ref(_ref) {\n          _this2.autoComplete = _ref;\n        },\n        onBlur: this.handleBlur,\n        searchText: value,\n        onUpdateInput: this.handleInput,\n        onKeyPress: this.handleKeyPressed,\n        onFocus: this.handleFocus,\n        fullWidth: true,\n        style: styles.input,\n        underlineShow: false,\n        disabled: disabled,\n        spellCheck: spellCheck\n      }, inputProps))), _react2.default.createElement(_IconButton2.default, {\n        onClick: onRequestSearch,\n        iconStyle: styles.iconButtonSearch.iconStyle,\n        style: styles.iconButtonSearch.style,\n        disabled: disabled\n      }, searchIcon), _react2.default.createElement(_IconButton2.default, {\n        onClick: this.handleCancel,\n        iconStyle: styles.iconButtonClose.iconStyle,\n        style: styles.iconButtonClose.style,\n        disabled: disabled\n      }, closeIcon));\n    }\n  }]);\n\n  return SearchBar;\n}(_react.Component);\n\nexports.default = SearchBar;\nSearchBar.defaultProps = {\n  closeIcon: _react2.default.createElement(_close2.default, {\n    color: _colors.grey500\n  }),\n  dataSource: [],\n  dataSourceConfig: {\n    text: 'text',\n    value: 'value'\n  },\n  disabled: false,\n  hintText: 'Search',\n  searchIcon: _react2.default.createElement(_search2.default, {\n    color: _colors.grey500\n  }),\n  spellCheck: false,\n  value: ''\n};\nSearchBar.propTypes = {\n  /** Override the close icon. */\n  closeIcon: _propTypes2.default.node,\n\n  /** Array of strings or nodes used to populate the list. */\n  dataSource: _propTypes2.default.array,\n\n  /** Config for objects list dataSource. */\n  dataSourceConfig: _propTypes2.default.object,\n\n  /** Disables text field. */\n  disabled: _propTypes2.default.bool,\n\n  /** Sets hintText for the embedded text field. */\n  hintText: _propTypes2.default.string,\n\n  /** Override the inline-styles of the button element. */\n  iconButtonStyle: _propTypes2.default.object,\n\n  /** Fired when the text value changes. */\n  onChange: _propTypes2.default.func.isRequired,\n\n  /** Fired when the search icon is clicked. */\n  onRequestSearch: _propTypes2.default.func.isRequired,\n\n  /** Override the search icon. */\n  searchIcon: _propTypes2.default.node,\n\n  /** Specifies whether the element to have its spelling and grammar checked or not. */\n  spellCheck: _propTypes2.default.bool,\n\n  /** Override the inline-styles of the root element. */\n  style: _propTypes2.default.object,\n\n  /** The value of the text field. */\n  value: _propTypes2.default.string\n};","map":null,"metadata":{},"sourceType":"script"}