{"ast":null,"code":"import _classCallCheck from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/Email.jsx\";\nimport React from \"react\";\nimport SockJsClient from \"react-stomp\";\nimport UsernameGenerator from \"username-generator\";\nimport { TalkBox } from \"react-talk\";\n\nvar randomstring = require(\"randomstring\");\n\nvar Email =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Email, _React$Component);\n\n  function Email(props) {\n    var _this;\n\n    _classCallCheck(this, Email);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Email).call(this, props));\n\n    _this.sendMessage = function (msg) {\n      _this.clientRef.sendMessage('/topics/all', msg);\n    };\n\n    _this.state = {\n      clientConnected: false,\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(Email, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(SockJsClient, {\n        url: \"http://localhost:8080/ws\",\n        topics: ['/topics/all'],\n        onMessage: function onMessage(msg) {\n          console.log(msg);\n        },\n        ref: function ref(client) {\n          _this2.clientRef = client;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Email;\n}(React.Component);\n\nexport { Email as default };","map":{"version":3,"sources":["/Users/thotra/Documents/Personal/Mail_Clone_React/mail_clone/src/Component/Email.jsx"],"names":["React","SockJsClient","UsernameGenerator","TalkBox","randomstring","require","Email","props","sendMessage","msg","clientRef","state","clientConnected","messages","console","log","client","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,SAASC,OAAT,QAAwB,YAAxB;;AACA,IAAMC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAOnBC,WAPmB,GAOL,UAACC,GAAD,EAAS;AACnB,YAAKC,SAAL,CAAeF,WAAf,CAA2B,aAA3B,EAA0CC,GAA1C;AACH,KATkB;;AAEf,UAAKE,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,KADR;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;6BAKQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,0BAAlB;AAA6C,QAAA,MAAM,EAAE,CAAC,aAAD,CAArD;AACc,QAAA,SAAS,EAAE,mBAACJ,GAAD,EAAS;AAAEK,UAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAAmB,SADvD;AAEc,QAAA,GAAG,EAAG,aAACO,MAAD,EAAY;AAAE,UAAA,MAAI,CAACN,SAAL,GAAiBM,MAAjB;AAAyB,SAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAOH;;;;EApB8BhB,KAAK,CAACiB,S;;SAApBX,K","sourcesContent":["import React from \"react\";\nimport SockJsClient from \"react-stomp\";\nimport UsernameGenerator from \"username-generator\";\nimport { TalkBox } from \"react-talk\";\nconst randomstring = require(\"randomstring\");\n\nexport default class Email extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientConnected: false,\n            messages: []\n        };\n    }\n    sendMessage = (msg) => {\n        this.clientRef.sendMessage('/topics/all', msg);\n    };\n\n    render() {\n        return (\n            <div>\n                <SockJsClient url='http://localhost:8080/ws' topics={['/topics/all']}\n                              onMessage={(msg) => { console.log(msg); }}\n                              ref={ (client) => { this.clientRef = client }} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}